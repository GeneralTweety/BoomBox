{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for the Virtual Machine."
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "windowsOSVersion": {
        "type": "string",
        "defaultValue": "19h2-pro",
        "allowedValues": [
          "19h2-pro"
        ],
        "metadata": {
          "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_B2s",
        "metadata": {
          "description": "Size of the virtual machine."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "_artifactsLocation": {
          "type": "string",
          "defaultValue": "https://raw.githubusercontent.com/nbeede/BoomBox/master/",
          "metadata": {
              "description": "The location of resources, such as templates and DSC modules, that the template depends on"
          }
      }
    },
    "variables": {
        // boilerplate to get vm up
      "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'boombox')]",
      "nicName": "myVMNic",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "publicIPAddressName": "myPublicIP",
      "vmName": "win10test",
      "virtualNetworkName": "VNETtest",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
      "networkSecurityGroupName": "testNSG",
      // post install stuff
      "prepareBoxScript": "[uri(parameters('_artifactsLocation'), concat('templates/scripts/Prepare-Box.ps1'))]"
    //   "enableRdp": "[concat(parameters('_artifactsLocation'),'scripts/enable-rdp.bat')]",
    //   "debloatWindows": "[concat(parameters('_artifactsLocation'),'scripts/debloat-windows.ps1')]",
    //   "rearmWindows": "[concat(parameters('_artifactsLocation'),'scripts/rearm-windows.ps1')]",
    //   "MWGA": "[concat(parameters('_artifactsLocation'),'scripts/MakeWindows10GreatAgain.ps1')]",
    //   "setPowerPlan": "[concat(parameters('_artifactsLocation'),'scripts/set-powerplan.ps1')]",
    //   "disableDefender": "[concat(parameters('_artifactsLocation'),'scripts/docker/disable-windows-defender.ps1')]",
    //   "pinPowershell": "[concat(parameters('_artifactsLocation'),'scripts/enable-rdp.bat')]",
    //   "compileNET": "[concat(parameters('_artifactsLocation'),'scripts/compile-dotnet-assemblies.bat')]",
    //   "setWinRM": "[concat(parameters('_artifactsLocation'),'scripts/set-winrm-automatic.bat')]",
    //   "compact": "[concat(parameters('_artifactsLocation'),'scripts/compact.bat')]"

    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-11-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-11-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
        {
            "comments":  "Default Network Security Group for template",
            "type":  "Microsoft.Network/networkSecurityGroups",
            "apiVersion":  "2019-08-01",
            "name":  "[variables('networkSecurityGroupName')]",
            "location":  "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name":  "default-allow-3389",
                        "properties": {
                            "priority":  100,
                            "access":  "Allow",
                            "direction":  "Inbound",
                            "destinationPortRange":  "3389",
                            "protocol":  "Tcp",
                            "sourcePortRange":  "*",
                            "sourceAddressPrefix":  "*",
                            "destinationAddressPrefix":  "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-11-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-11-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 100,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                "networkInterfaces": [
                    {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                    }
                ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "name": "SetupWinVM",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName')[copyIndex()])]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.8",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/nbeede/BoomBox/master/templates/scripts/initialSetup.ps1",
                        "[variables('prepareBoxScript')]"
                    ],
                    "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ./initialSetup.ps1"
                },
                "protectedSettings": {}
            }
        }
    ],

    "outputs": {
        "hostname": {
        "type": "string",
        "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        }
    }
}